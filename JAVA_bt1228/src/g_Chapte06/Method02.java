package g_Chapte06;

// 메서드
// : 특정 작업을 수행하는 일련의 문장들을 하나로 묶은 것
// : 어떤 값을 입력하면 해당 값으로 작업을 수행하여 결과를 반환

// 메서드의 구조
// 선언부, 구현부

// 반환타입 메서드명 () : 선언부
// { 메서드 호출 시 수행될 코드 } : 구현부
// : 메서드를 정의한다 == 선언부와 구현부를 작성한다

// 1. 메서드의 선언부
// '반환타입', '메서드명', '매개변수 선언'

// 매개변수(parameter) 선언
// : 메서드가 작업을 수행하는데 필요한 값들(입력)을 제공받기 위한 것

// : 필요한 값의 개수만큼 변수를 선언하여 각 변수 간의 구분은 쉼표(,)를 사용
// : 변수들의 데이터 타입이 같더라도 변수의 타입을 생략할 수 X
// int add (int x, y) {...} - Error

// 반환 타입(return type)
// : 메서드의 작업수행 결과(출력)인 반환값의 타입을 명시
// : 반환값이 없는 경우 void 키워드를 사용

// 2. 메서드의 구현부
// : 메서드 선언부 다음에 오는 중괄호{}

// return문
// : 메서드의 반환타입이 void가 아닌 경우
// : , 구현부{} 안에 반드시 'return 반환값'이 포함
// : 해당 반환값은 반환타입과 일치하거나 적어도 자동 형변환이 가능한 것

// : return문은 단 하나의 값만을 반환 가능

// 지역변수(local variable)
// : 메서드 내에 선언된 변수 - 그 메서드 내에서만 사용 가능
// : 메서드의 구현부에 작성된 변수 뿐만 아니라 
// : ,매개변수도 메서드 내에서 선언된 것으로 간주하기 때문에 지역변수로 인식

class Example {
	// (인스턴스) 변수 선언
	// : 데이터 타입이 같은 경우 변수 타입 생략이 가능
	int x, y;
//	int x;
//	int y;
	
	// add 메서드
	// : 두 개의 정수를 입력 받아서, 두 값을 더한 결과를 반환
	
	// int: 반환타입(출력)
	// add: 메서드명
	// (int x, int y): 매개변수선언(입력)
	int add(int x, int y) {
		int result = x + y;
		return result; // 결과를 반환
	}
	
	// 메서드 내에 선언된 지역 변수는 해당 메서드 내에서만 사용할 수 있기 때문에
	// , 서로 다른 메서드라면 같은 이름의 변수 선언 가능
	int multiply(int x, int y) {
		int result = x * y;
		return result;
	}
	
	// 매개변수 X, 반환 값 X
	// : 메서드는 매개변수와 반환값이 필수 X
	void print99danAll() {
		for (int i = 1; i <= 9; i++) {
			for (int j = 2; j <= 9; j++) {
				System.out.print(j*i + " ");
			}
			System.out.println();
		}
	}	
}

public class Method02 {
	// 클래스 파일
	// main 메소드
	// : 접근제어자 정적메소드 반환타입 메소드명(매개변수) {...구현부}
	
	// public: main 메서드가 프로그램의 어디서든 호출 가능
	// static: main 메서드가 인스턴스 없이도 호출 가능
	// void: 메서드가 어떤 값을 반환하지 않음
	// main: 메서드명
	// (String[] args): 메서드의 매개변수로 String타입의 배열을 전달받음
	// - 자바 설치 시
	// - 자바 런타임 시스템이 애플리케이션을 시작할 때 사용하는 이름으로 자동 지정
	public static void main(String[] args) {
		Example ex1 = new Example();
		
		// 메서드 정의 후 호출이 되어야만 구현부{} 내의 문장이 수행
		// 메서드 호출 방법
		// : 메서드명(메서드 정의 시 작성한 매개변수 작성);
		ex1.print99danAll();
		
		// int add(int x, int y)를 호출하고 결과를 result에 저장
		// 반환되는 메서드 결과 확인을 위해서는 result 변수에 담긴 값을 출력(syso)
		System.out.println(ex1.add(10, 20)); // 30
		
		// 인수(argument) & 매개변수(parameter)
		// 인수(인자)란?
		// : 메서드를 호출할 때 소괄호() 안에 지정해준 값
		// : 인자의 개수와 순서는 반드시 호출된 메서드에 선언된 매개변수와 일치
//		ex1.add(10, 20, 30); - Error (매개변수 2개인 메서드에 인자 3개 전달 X)
//		ex1.add(10.0, 20.0); - Error (double 타입은 int 타입에 사용 X)
		ex1.add('a', 'b'); // char 타입은 int 타입으로 자동 형 변환

		// 
		String message = "이것은 지역 변수 입니다.";
		System.out.println();
		
		// 클래스 파일
		// main 메서드
		// : 생성한 클래스 파일을 실행(ctrl + f11)하는 경우
		// : 자바 런타임 환경이 main 메서드를 찾아서 실행
	}
}
