package b_Chapter01;

// 데이터
// : 세계에 존재하는 정보를 총칭(컴퓨터의 저장 장치에 기록한 정보)
// : 컴퓨터는 기계어를 통해 데이터를 인식하고 처리

public class A_Variable {

	public static void main(String[] args) {
		// 변수 (Variable)
		// : 데이터를 저장할 수 있는 메모리 '공간'
		
//		1. 변수 선언
//		: 메모리 공간을 생성
//		: 컴퓨터에게 데이터를 가져올 상자를 알려줌
//		: >> 컴퓨터는 '상자'안에 있는 내용물을 가져다줌

//		2. 변수 선언 방법: 상자를 생성하는 것
//		: 데이터타입 변수명;
		
//		3. 변수 초기화 방법: 상자에 데이터를 담는 것
//		변수명 = 데이터값;
//		: 프로그래밍에서 =(등호1개)는 우항의 값을 좌항에 대입한다.
//		: 프로그래밍에서 '같다'를 나타내는 기호: ==
		
//		4. 변수 선언과 동시에 초기화
//		데이터타입 변수명 = 데이터값;
		
//		5. 변수 명명 규칙
//		- 문자, 숫자, 기호를 사용
//		- 대소문자가 구분, 길이에 제한이 X 
//			: Name, name 서로 다름.
//		- 숫자로 시작할 수 X
//			: top10(가능), 7top(불가능)
//		- 기호는 _(언더 스코어), $(달러)만 가능
//			: _hello, $hi
//		- 카멜케이스를 사용
//		    : 시작 단어는 소문자로 시작, 이어지는 단어는 대문자로 시작
//			: studentName, scoreTotal
//		- 전체 대문자 사용을 지양(사용X)
//			: 상수와 구분하기 위함
//		- 자바의 예약어, 키워드는 변수명으로 사용 X
//		    : if, for, class, byte 등등
		
		// 상수 (Constant)
		// : 프로그램 실행 동안 그 값이 변경되지 않는 변수를 의미
		// : 선언과 동시에 반드시 초기화가 이루어져야 함
		
//		1. 상수 선언 및 초기화
//		: 자바에서는 final 키워드를 사용하여 상수를 선언
//		: final 데이터타입 상수명 = 데이터값;
		
//		2. 상수의 특징
//		- 초기화 이후에는 값을 변경할 수 X
//		- 보통 대문자로 명명
//		- 일반적으로 공개된 값이나 변경되지 않는 값들을 정의할 때 사용
//		: 파이(PI: 3.14159)
//		: final 데이터타입 PI = 3.14159;
//		: final 데이터타입 RESIDENT_NUMBER = 12345678;
		
//		3. 상수 명명 규칙
//		- 전체 대문자로 명명을 권장
//		- 스네이크 케이스를 사용(단어와 단어 사이를 _로 구분)
	}
}
